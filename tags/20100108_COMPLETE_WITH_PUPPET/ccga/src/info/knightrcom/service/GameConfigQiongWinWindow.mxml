<?xml version="1.0" encoding="utf-8"?>
<FunctionWindow xmlns="info.knightrcom.service.*"
				xmlns:mx="http://www.adobe.com/2006/mxml"
				creationComplete="creationCompleteHandler();">
	<mx:Script>
		<![CDATA[
			import mx.utils.Base64Decoder;
			import mx.events.DragEvent;
			import info.knightrcom.model.OperationMethod;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.controls.TextArea;
			import mx.containers.FormItem;
			import info.knightrcom.util.HttpServiceProxy;
			import info.knightrcom.util.ListenerBinder;
			import info.knightrcom.service.LocalGameConfigureService;
			import mx.events.ItemClickEvent;
			import mx.events.CloseEvent;
			import mx.validators.Validator;

			public var currentOperationMethod:OperationMethod;
			
			public static var adminApp:Administration;
			
			protected function setValue(event:ResultEvent):void
			{
				var e4xResult:XML=new XML(event.result);
				// 读取时ID不可编辑
				gameId.enabled=false;
				gameId.text=e4xResult.entity.map[CURRENT_PAGE - 1].id.text();
				gameName.text=e4xResult.entity.map[CURRENT_PAGE - 1].name.text();
				displayIndex.text=e4xResult.entity.map[CURRENT_PAGE - 1].displayindex.text();
				roundMark.text=e4xResult.entity.map[CURRENT_PAGE - 1].roundmark.text();
				pointMark.text=e4xResult.entity.map[CURRENT_PAGE - 1].pointmark.text();
				minMarks.text=e4xResult.entity.map[CURRENT_PAGE - 1].minmarks.text();
				gameDisabled.text=e4xResult.entity.map[CURRENT_PAGE - 1].disabled.text() == "true" ? "禁用" : "启用";
				btnDisabled.label = gameDisabled.text == "启用" ? "禁用" : "启用";
				trace(e4xResult.entity.map[CURRENT_PAGE - 1].name.text());
			}

			protected function readData(ind:Number):void
			{
				HttpServiceProxy.send(LocalGameConfigureService.READ_ROOM_CONFIGURE, {GAME_TYPE: ind, CURRENT_PAGE: CURRENT_PAGE}, infoService, function(event:ResultEvent):void
					{
						setValue(event);
					});
			}


			protected function clearEditor():void
			{
				for each (var thisFormItem:FormItem in Form(this.editorNew).getChildren())
				{
					var control:Object=thisFormItem.getChildAt(0);
					if (control is TextInput)
					{
						TextInput(control).text="";
					}
					else if (control is TextArea)
					{
						TextArea(control).text="";
					}
					else
					{
						throw Error("无法为当前控件进行初始化");
					}
				}
			}

			private function btnSaveQiongWinClickHandler(event:MouseEvent):void {
				if (Validator.validateAll(this.qiongWinSaveValidators).length > 0)
				{
					Alert.show("信息填写不符合规范！", "警告");
					return;
				}
				// 检查服务器是否关闭
				HttpServiceProxy.send(LocalGameConfigureService.IS_SERVER_CLOSE_STATUS, {}, null, function(event:ResultEvent):void 
					{
						if (new XML(event.result).result == "SUCCESS")
						{
							currentOperationMethod=OperationMethod.UPDATE;
							if (currentOperationMethod == OperationMethod.UPDATE)
							{
								HttpServiceProxy.send(LocalGameConfigureService.UPDATE_QIONG_WIN_ROOM_CONFIGURE, {GAME_TYPE: 2, CURRENT_PAGE: CURRENT_PAGE, GAME_ID: gameId.text, GAME_NAME: gameName.text, DISPLAY_INDEX: displayIndex.text, ROUND_MARK: Number(roundMark.text), POINT_MARK: Number(pointMark.text), MIN_MARKS: Number(minMarks.text), DISABLED: (gameDisabled.text == "禁用" ? true : false)}, null, function(event:ResultEvent):void
									{
										if (new XML(event.result).result == "SUCCESS")
										{
											Alert.show("保存成功！", "穷胡参数设置");
										}
										else
										{
											Alert.show("保存失败！", "穷胡参数设置");
										}
									}, function(event:FaultEvent):void
									{
										Alert.show("保存失败！", "穷胡参数设置");
									});
							}
							currentOperationMethod=OperationMethod.UPDATE;
						}
						else
						{
							Alert.show("请先关闭游戏服务器！", "穷胡参数设置");
						}
					}, function(event:FaultEvent):void
					{
						Alert.show("服务中断！", "穷胡参数设置");
					});
			}
			
			private function btnAddQiongWinClickHandler(event:MouseEvent):void {
				currentState="ADD";
				currentOperationMethod=OperationMethod.CREATE;
				clearEditor();
				gameDisabledNew.text="禁用";
			}
			
			private function btnDisabledQiongWinClickHandler(event:MouseEvent):void {
				if (Validator.validateAll(this.qiongWinSaveValidators).length > 0)
				{
					Alert.show("信息填写不符合规范！", "警告");
					return;
				}
				// 检查服务器是否关闭
				HttpServiceProxy.send(LocalGameConfigureService.IS_SERVER_CLOSE_STATUS, {}, null, function(event:ResultEvent):void 
					{
						if (new XML(event.result).result == "SUCCESS")
						{
							currentOperationMethod=OperationMethod.UPDATE;
							Alert.yesLabel = "确认";
							Alert.noLabel = "取消";
						    Alert.show( "确定要" + btnDisabled.label + "？",
									"消息", 
									Alert.YES | Alert.NO,
									adminApp,
									function handleAlert(event:CloseEvent):void {
									    if(event.detail == Alert.YES)
									    {
									      HttpServiceProxy.send(LocalGameConfigureService.UPDATE_QIONG_WIN_ROOM_CONFIGURE, {GAME_TYPE: 2, CURRENT_PAGE: CURRENT_PAGE, GAME_ID: gameId.text, GAME_NAME: gameName.text, DISPLAY_INDEX: displayIndex.text, ROUND_MARK: Number(roundMark.text), POINT_MARK: Number(pointMark.text), MIN_MARKS: Number(minMarks.text), DISABLED: (btnDisabled.label == "禁用" ? true : false)}, null, function(event:ResultEvent):void
												{
													if (new XML(event.result).result == "SUCCESS")
													{
														Alert.show(btnDisabled.label + "成功！", "穷胡参数设置");
														currentOperationMethod=OperationMethod.UPDATE;
														readData(2);
													}
													else
													{
														Alert.show(btnDisabled.label + "失败！", "穷胡参数设置");
													}
												}, function(event:FaultEvent):void
												{
													Alert.show(btnDisabled.label + "失败！", "穷胡参数设置");
												});
									    }
									},
									null,
									Alert.YES);
							}
							else
							{
								Alert.show("请先关闭游戏服务器！", "穷胡参数设置");
							}
						}, function(event:FaultEvent):void
						{
							Alert.show("服务中断！", "穷胡参数设置");
						});
			}
					
			private function pageChangeClickHandler(event:ItemClickEvent):void {
				if (isNaN(TOTAL_PAGE) || TOTAL_PAGE < 1)
				{
					return;
				}
				if (event.index == 0)
				{
					CURRENT_PAGE--;
				}
				else if (event.index == 1)
				{
					CURRENT_PAGE++;
				}
				// param 2: QiongWin
				readData(2);
			}
			
			private function btnSubmitQiongWinClickHandler(event:MouseEvent):void {
				if (Validator.validateAll(this.qiongWinAddValidators).length > 0)
				{
					Alert.show("信息填写不符合规范！", "警告");
					return;
				}
				// 检查服务器是否关闭
				HttpServiceProxy.send(LocalGameConfigureService.IS_SERVER_CLOSE_STATUS, {}, null, function(event:ResultEvent):void 
					{
						if (new XML(event.result).result == "SUCCESS")
						{
							if (currentOperationMethod == OperationMethod.CREATE)
							{
								HttpServiceProxy.send(LocalGameConfigureService.CREATE_QIONG_WIN_ROOM_CONFIGURE, {GAME_TYPE: 2, CURRENT_PAGE: 1, GAME_ID: gameIdNew.text, GAME_NAME: gameNameNew.text, ROUND_MARK: Number(roundMarkNew.text), POINT_MARK: Number(pointMarkNew.text), MIN_MARKS: Number(minMarksNew.text), DISABLED: (gameDisabledNew.text == "禁用" ? true : false)}, null, function(event:ResultEvent):void
									{
										if (new XML(event.result).result == "SUCCESS")
										{
											Alert.show("新增成功！", "穷胡参数设置");
											currentOperationMethod=OperationMethod.UPDATE;
										}
										else
										{
											Alert.show("新增失败！", "穷胡参数设置");
										}
									}, function(event:FaultEvent):void
									{
										Alert.show("新增失败！", "穷胡参数设置");
									});
							}
						}
						else
						{
							Alert.show("请先关闭游戏服务器！", "穷胡参数设置");
						}
					}, function(event:FaultEvent):void
					{
						Alert.show("服务中断！", "穷胡参数设置");
					});
			}
			
			private function btnBackQiongWinClickHandler(event:MouseEvent):void {
				currentState="EDIT";
				currentOperationMethod=OperationMethod.UPDATE;
				readData(2);
			}
					
			protected function creationCompleteHandler():void
			{
				// 状态初始化
				initializeEachState("EDIT");
				// 事件绑定
				CURRENT_PAGE=1;
				// param 2: QiongWin
				readData(2);
				// 保存
				ListenerBinder.bind(btnSave, MouseEvent.CLICK, btnSaveQiongWinClickHandler);
				// 新增
				ListenerBinder.bind(btnCreate, MouseEvent.CLICK, btnAddQiongWinClickHandler);
				// 状态
				ListenerBinder.bind(btnDisabled, MouseEvent.CLICK, btnDisabledQiongWinClickHandler);
				// 翻页
				ListenerBinder.bind(pageRoller, ItemClickEvent.ITEM_CLICK, pageChangeClickHandler);
				// 确定
				ListenerBinder.bind(btnSubmit, MouseEvent.CLICK, btnSubmitQiongWinClickHandler);
				// 取消
				ListenerBinder.bind(btnBack, MouseEvent.CLICK, btnBackQiongWinClickHandler);
			}
		]]>
	</mx:Script>
	<states>
		<mx:State name="ADD">
			<mx:AddChild position="lastChild">
				<mx:Form id="editorNew"
						 left="0"
						 right="0"
						 top="0"
						 bottom="40">
					<mx:FormItem label="uuid"
								 visible="false">
						<mx:TextInput id="globalConfigIdNew"/>
					</mx:FormItem>
					<mx:FormItem label="游戏ID">
						<mx:TextInput id="gameIdNew"/>
					</mx:FormItem>
					<mx:FormItem label="游戏名">
						<mx:TextInput id="gameNameNew"/>
					</mx:FormItem>
					<mx:FormItem label="底分">
						<mx:TextInput id="roundMarkNew"/>
					</mx:FormItem>
					<mx:FormItem label="番分">
						<mx:TextInput id="pointMarkNew"/>
					</mx:FormItem>
					<mx:FormItem label="最少底分">
						<mx:TextInput id="minMarksNew"/>
					</mx:FormItem>
					<mx:FormItem label="状态">
						<mx:TextInput id="gameDisabledNew" enabled="false" text="禁用"/>
					</mx:FormItem>
				</mx:Form>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button label="确定"
						   id="btnSubmit"
						   right="66"
						   bottom="10"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button label="返回"
						   id="btnBack"
						   right="10"
						   bottom="10"/>
			</mx:AddChild>
			<mx:SetProperty name="title"
							value="穷胡房间新增"/>
		</mx:State>
		<mx:State name="EDIT">
			<mx:AddChild position="lastChild">
				<mx:Form id="editor"
						 left="0"
						 right="0"
						 top="0"
						 bottom="40">
					<mx:FormItem label="uuid"
								 visible="false">
						<mx:TextInput id="globalConfigId"/>
					</mx:FormItem>
					<mx:FormItem label="游戏ID">
						<mx:TextInput id="gameId"/>
					</mx:FormItem>
					<mx:FormItem label="游戏名">
						<mx:TextInput id="gameName"/>
					</mx:FormItem>
					<mx:FormItem label="游戏房间位置">
						<mx:TextInput id="displayIndex"/>
					</mx:FormItem>
					<mx:FormItem label="底分">
						<mx:TextInput id="roundMark"/>
					</mx:FormItem>
					<mx:FormItem label="番分">
						<mx:TextInput id="pointMark"/>
					</mx:FormItem>
					<mx:FormItem label="最少底分">
						<mx:TextInput id="minMarks"/>
					</mx:FormItem>
					<mx:FormItem label="状态">
						<mx:TextInput id="gameDisabled" enabled="false"/>
					</mx:FormItem>
				</mx:Form>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button label="新增"
						   id="btnCreate"
						   right="130"
						   bottom="10"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button label="保存"
						   id="btnSave"
						   right="70"
						   bottom="10"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button id="btnDisabled"
						   right="10"
						   bottom="10"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:ControlBar paddingTop="0"
							   paddingBottom="0"
							   horizontalAlign="right">
					<mx:Label id="lblPage"
							  text="{infoService.lastResult.pagination.currentPage + '/' + infoService.lastResult.pagination.totalPage}"/>
					<mx:LinkBar id="pageRoller">
						<mx:Array>
							<mx:Object label="前页"/>
							<mx:Object label="后页"/>
						</mx:Array>
					</mx:LinkBar>
				</mx:ControlBar>
			</mx:AddChild>
			<mx:SetProperty name="title"
							value="穷胡参数管理"/>
		</mx:State>
	</states>
	<!-- 验证器 -->
   <mx:Array id="qiongWinSaveValidators">
        <mx:StringValidator source="{gameName}"
                            required="true"
                            property="text"
                            minLength="1" maxLength="20"  
					    	tooShortError="游戏名字数最少1个字符！"
					    	tooLongError="游戏名字数最多20个字符！"
                            requiredFieldError="游戏名不能为空！"/>
        <mx:NumberValidator source="{displayIndex}" 
							property="text" 
        					domain="int"
        					integerError="游戏房间位置必须是整数！"
        					invalidCharError="游戏房间位置必须是整数！"
					    	requiredFieldError="游戏房间位置不能为空！"/>  
        <mx:NumberValidator source="{roundMark}"
                            required="true"
                            property="text"
        					invalidCharError="底分必须是数字！"
                            requiredFieldError="底分不能为空！"/>
		<mx:NumberValidator source="{pointMark}"
                            required="true"
                            property="text"
        					invalidCharError="番分必须是数字！"
                            requiredFieldError="番分不能为空！"/>
		<mx:NumberValidator source="{minMarks}"
                            required="true"
                            property="text"
        					invalidCharError="最少底分必须是数字！"
                            requiredFieldError="最少底分不能为空！"/>
	</mx:Array>
	<mx:Array id="qiongWinAddValidators">
        <mx:StringValidator source="{gameIdNew}"
                            required="true"
                            property="text"
                            minLength="1" maxLength="20"  
					    	tooShortError="游戏ID字数最少1个字符！"
					    	tooLongError="游戏ID字数最多20个字符！"
                            requiredFieldError="游戏ID不能为空！"/>
        <mx:StringValidator source="{gameNameNew}"
                            required="true"
                            property="text"
                            minLength="1" maxLength="20"  
					    	tooShortError="游戏名字数最少1个字符！"
					    	tooLongError="游戏名字数最多20个字符！"
                            requiredFieldError="游戏名不能为空！"/> 
        <mx:NumberValidator source="{roundMarkNew}"
                            required="true"
                            property="text"
        					invalidCharError="底分必须是数字！"
                            requiredFieldError="底分不能为空！"/>
		<mx:NumberValidator source="{pointMarkNew}"
                            required="true"
                            property="text"
        					invalidCharError="番分必须是数字！"
                            requiredFieldError="番分不能为空！"/>
		<mx:NumberValidator source="{minMarksNew}"
                            required="true"
                            property="text"
        					invalidCharError="最少底分必须是数字！"
                            requiredFieldError="最少底分不能为空！"/>
    </mx:Array>
	<mx:Number id="CURRENT_PAGE">{infoService.lastResult.pagination.currentPage}</mx:Number>
	<mx:Number id="TOTAL_PAGE">{infoService.lastResult.pagination.totalPage}</mx:Number>
</FunctionWindow>
