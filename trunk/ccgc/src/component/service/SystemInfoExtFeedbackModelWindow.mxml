<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				layout="absolute"
				horizontalCenter="0"
				verticalCenter="0"
				title="作弊举报"
				showCloseButton="true"
				height="374">
	<mx:visible>false</mx:visible>
	<mx:Form id="editor"
			 left="10"
			 right="10"
			 top="10"
			 bottom="265"
			 paddingTop="0"
			 paddingRight="0"
			 paddingBottom="0"
			 paddingLeft="0">
		<mx:FormItem label="游戏ID" required="true" width="100%" direction="horizontal">
			<mx:TextInput id="feedbackGameId" width="100%" text=""/>
			<mx:Label width="50" textAlign="right" text="{feedbackGameId.text.length + '/100'}"/>
		</mx:FormItem>
		<mx:FormItem label="标题" required="true" width="100%" direction="horizontal">
			<mx:TextInput id="feedbackTitle" width="100%"/>
			<mx:Label width="50" textAlign="right" text="{feedbackTitle.text.length + '/50'}"/>
		</mx:FormItem>
		<mx:FormItem label="描述" required="true" width="100%" direction="horizontal">
			<mx:TextArea id="feedbackDesc" width="100%" height="80"/>
			<mx:Label width="50" textAlign="right" text="{feedbackDesc.text.length + '/200'}"/>
		</mx:FormItem>
	</mx:Form>
	<mx:Button id="btnSubmitFeeckback" label="提交举报" bottom="168" horizontalCenter="171"/>
	<mx:HRule left="10"
			  right="10"
			  y="181"
			  width="413"
			  height="2"/>
	<mx:Label x="10" y="182" text="历史举报记录"/>
	<mx:DataGrid minWidth="400"
				 left="10"
				 right="10"
				 top="200"
				 bottom="10">
		<mx:dataProvider>{feedbackHistoryInfoService.lastResult.tag.map}</mx:dataProvider>
		<mx:columns>
			<mx:DataGridColumn headerText="游戏ID" dataField="gameId"/>
			<mx:DataGridColumn headerText="游戏类别" dataField="gameType"/>
			<mx:DataGridColumn headerText="标题" dataField="title"/>
			<mx:DataGridColumn headerText="当前状态" dataField="status"/>
			<mx:DataGridColumn headerText="举报时间" dataField="createTime"/>
		</mx:columns>
	</mx:DataGrid>
	<!-- 查询组件 -->
	<mx:HTTPService id="feedbackHistoryInfoService"
					showBusyCursor="true"
					useProxy="false"
					resultFormat="e4x"
					method="POST"/>
	<!-- 验证器 -->
	<mx:Array id="gameFeedbackValidators">
		<mx:StringValidator source="{feedbackGameId}" required="true" property="text" requiredFieldError="游戏ID不能为空！"/>
		<mx:StringValidator source="{feedbackTitle}"
							required="true"
							property="text"
							minLength="1"
							maxLength="50"
							tooShortError="标题不能为空，字数必须在1-50之间！"
							tooLongError="标题不能为空，字数必须在1-50之间！"
							requiredFieldError="标题不能为空，字数必须在1-50之间！"/>
		<mx:StringValidator source="{feedbackDesc}"
							required="true"
							property="text"
							minLength="20"
							maxLength="200"
							tooShortError="请认真填写举报内容，字数必须在20-200之间！"
							tooLongError="请认真填写举报内容，字数必须在20-200之间！"
							requiredFieldError="请认真填写举报内容，字数必须在20-200之间！"/>
	</mx:Array>
	<mx:Script>
		<![CDATA[
			import info.knightrcom.service.LocalGameFeedbackService;
			import info.knightrcom.state.BaseStateManager;
			import info.knightrcom.util.HttpServiceProxy;
			import info.knightrcom.util.ListenerBinder;
			
			import mx.containers.Form;
			import mx.containers.FormItem;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.controls.TextArea;
			import mx.controls.TextInput;
			import mx.core.Application;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;

			private function closeHandler(event:Event):void {
				this.visible = false;
				for each (var thisFormItem:FormItem in Form(this.editor).getChildren()) {
					var control:Object = thisFormItem.getChildAt(0);
					if (control is TextInput) {
						TextInput(control).text = "";
					} else if (control is TextArea) {
						TextArea(control).text = "";
					} else {
						throw Error("无法为当前控件进行初始化");
					}
				}
				PopUpManager.removePopUp(this);
			}

			private function btnSubmitFeeckbackClickHandler(event:MouseEvent):void
			{
				if (Validator.validateAll(this.gameFeedbackValidators).length > 0)
				{
					Alert.show("信息填写不符合规范！", "警告");
					return;
				}
				HttpServiceProxy.send(
					LocalGameFeedbackService.COMMIT_GAME_FEEDBACK, 
					   {GAME_ID: this.feedbackGameId.text, 
						TITLE: this.feedbackTitle.text, 
						DESCRIPTION: this.feedbackDesc.text, 
						CURRENT_USER_ID: BaseStateManager.currentProfileId}, 
					null, 
					function(event:ResultEvent):void
					{
						var data:* = new XML(event.result);
						if (data.result == "SUCCESS")
						{
							Alert.show("提交成功！", "消息");
							retrieveHistroyFeeckback(null);
							this.visible=false;
						}
						else if (data.result == "WARNING")
						{
							Alert.show("提交失败，请检查游戏ID是否输入正确！", "警告");
						}
						else
						{
							Alert.show("提交失败！", "错误");
						}
					});
			}
			
			public function retrieveHistroyFeeckback(event:Event):void
			{
				// 查看历史反馈信息
				HttpServiceProxy.send(
					LocalGameFeedbackService.RETRIEVE_FEEDBACK_HISTORY, 
					{CURRENT_USER_ID: BaseStateManager.currentProfileId}, 
					this.feedbackHistoryInfoService);
			}

			public function popup():void {
				try {
					PopUpManager.addPopUp(this, Application.application as DisplayObject, true);
					PopUpManager.centerPopUp(this);
					this.visible = true;
				} catch (e:*) {
				}
			}
		]]>
	</mx:Script>
	<mx:creationComplete>
		<![CDATA[
		// 当前窗口中反馈功能提交按钮
		ListenerBinder.bind(this.btnSubmitFeeckback, MouseEvent.CLICK, btnSubmitFeeckbackClickHandler);
		// 当前窗口中反馈窗口关闭事件
		ListenerBinder.bind(this, CloseEvent.CLOSE, closeHandler);
		ListenerBinder.bind(this, FlexEvent.SHOW, function (event:Event):void {
			/*
			feedbackGameId.text = "";
			feedbackTitle.text = "";
			feedbackDesc.text = "";
			*/
			retrieveHistroyFeeckback(event);
		});
		if (this.feedbackGameId.text.length == 0) {
			this.feedbackGameId.setFocus();
		} else if (this.feedbackTitle.text.length == 0) {
			this.feedbackTitle.setFocus();
		}
		]]>
	</mx:creationComplete>
</mx:TitleWindow>