<?xml version="1.0" encoding="utf-8"?>
<FunctionWindow xmlns="info.knightrcom.service.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="creationCompleteHandler()">
	<mx:Script>
		<![CDATA[
			import info.knightrcom.util.HttpServiceProxy;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import info.knightrcom.assets.PokerResource;
			
			/** VV仅作为占位符使用，因5不能作为顺子的组成部分，VV不会与任何内容匹配，所以3、4也就不可能成为顺子的一部分 */
	        private static const prioritySequence:String = "V3,V4,VV,V6,V7,V8,V9,V10,VJ,VQ,VK,VA,V2,V5,VX,VY";
	        private static const RED5:String = "1V5";
	        private static const RED5_PAIR:String = "1V5,1V5";
			
			private function creationCompleteHandler():void {
				this.currentState = "EDIT";
				HttpServiceProxy.send(LocalCustomPokerService.READ_POKER, {}, null, function(event:ResultEvent):void
						{
							var e4xResult:XML = new XML(event.result);
							if (e4xResult.result == "SUCCESS")
							{
					            showPoker(e4xResult.tag);
							}
							else
							{
								Alert.show("数据失败！", "自主牌型设置");
								return;
							}
						}, function(event:FaultEvent):void
						{
							Alert.show("数据失败！", "自主牌型设置");
							return;
						});
					
			}
			
			
			private function showPoker(cardSequence:String):void {
				var cardNames:Array = sortPokers(cardSequence);
	            var poker:PokerButton = null;
	            for each (var cardName:String in cardNames) {
	                poker = new PokerButton();
	                poker.source = PokerResource.load(cardName);
	                this.candidatedDown.addChild(poker);
	            }
			}
			
			/**
	         * 对服务器端洗牌后分配的尚未排序过的扑克进行排序
	         *
	         * @param cards
	         * @return
	         *
	         */
	        public static function sortPokers(cards:String):Array {
	            var cardArray:Array = cards.split(",");
	            cardArray.sort(cardSorter);
	            return cardArray;
	        }
	        
	        /**
         *
         * @param card1
         * @param card2
         * @return
         *
         */
        private static function cardSorter(card1:String, card2:String):int {
            if (card1 == card2) {
                // 值与花色都相同时
                return 0;
            } else if ("1V5" == card1) {
                // 第一张牌为红五时
                return 1;
            } else if ("1V5" == card2) {
                // 第二张牌为红五时
                return -1;
            }
            // 实现排序功能
            var pri1:int = prioritySequence.indexOf(card1.replace(/^[0-4]/, ""));
            var pri2:int = prioritySequence.indexOf(card2.replace(/^[0-4]/, ""));
            // 值比较
            if (pri1 > pri2) {
                return 1;
            } else if (pri1 < pri2) {
                return -1;
            }
            // 值相同时，进行花色比较
            if (card1.charAt(0) > card2.charAt(0)) {
                return 1;
            } else if (card1.charAt(0) < card2.charAt(0)) {
                return -1;
            }
            return 0;
        }
		]]>
	</mx:Script>
	<states>
		<mx:State name="EDIT">
			<mx:AddChild position="lastChild">
					<mx:HBox id="candidatedUp" top="10" width="100%" height="200" horizontalGap="-55"
			             horizontalAlign="left" verticalAlign="middle">
					</mx:HBox>
			</mx:AddChild>
			<mx:AddChild>
					<mx:HBox id="candidatedDown" top="260" width="1138" height="200" horizontalGap="-55"
			             horizontalAlign="left" verticalAlign="middle">
					</mx:HBox>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button label="上移" id="btnUp" right="600" bottom="270"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button label="下移" id="btnDown" right="550" bottom="270"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:CheckBox label="启用" id="chkDisable" right="80" bottom="10"/>
			</mx:AddChild>
			<mx:AddChild position="lastChild">
				<mx:Button label="保存" right="20" bottom="10" id="btnSave"/>
			</mx:AddChild>
		</mx:State>
	</states>
	
</FunctionWindow>
